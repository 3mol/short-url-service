version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: short-url-service
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8081:8080"
    environment:
      - DB_URL=jdbc:mysql://mysql:3306/short-url?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
      - DB_USERNAME=root
      - DB_PASSWORD=123456
      - JPA_DDL_AUTO=update
      - JPA_SHOW_SQL=true
      - SERVER_PORT=8080
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    networks:
      - short-url-network

  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: short-url-db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=short-url
      - MYSQL_USER=short-url
      - MYSQL_PASSWORD=123456
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123456"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - short-url-network

  # Kafka服务
  kafka:
    image: bitnami/kafka:3.6
    container_name: short-url-kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - short-url-network

volumes:
  mysql-data:
    driver: local
  kafka-data:
    driver: local

networks:
  short-url-network:
    driver: bridge